name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive 

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: Swatinem/rust-cache@v1

    - name: Update Linux Repositories
      run: sudo apt-get update
      if: ${{ runner.os == 'Linux' }}

    - name: Install Linux Dependencies
      run: sudo apt-get install -y libgtk-3-dev libssl-dev libasound2-dev
      if: ${{ runner.os == 'Linux' }}

    - name: Check Formatting
      run: cargo fmt --all -- --check

    - name: Run Tests
      run: cargo test
      continue-on-error: true

    - name: Build Release
      run: cargo build --release

    - name: Bundle macOS Release
      run: |
        cargo install cargo-bundle
        cargo bundle --release
      working-directory: psst-gui
      if: ${{ runner.os == 'macOS' }}
  
    - name: Create .dmg File
      run: |
        hdiutil create Psst-uncompressed.dmg -volname "Psst" -srcfolder target/release/bundle/osx
        hdiutil convert Psst-uncompressed.dmg -format UDZO -o Psst-x64.dmg
      if: ${{ runner.os == 'macOS' }}

    - name: Make Linux Binary Executable
      run: chmod +x target/release/psst-gui
      if: ${{ runner.os == 'Linux' }}

    - uses: actions/upload-artifact@v2
      with:
        name: psst-gui
        path: target/release/psst-gui
      if: ${{ runner.os == 'Linux' }}

    - uses: actions/upload-artifact@v2
      with:
        name: Psst-x64.dmg
        path: ./Psst-x64.dmg
      if: ${{ runner.os == 'macOS' }}

    - uses: actions/upload-artifact@v2
      with:
        name: Psst.exe
        path: target/release/psst-gui.exe
      if: ${{ runner.os == 'Windows' }}
